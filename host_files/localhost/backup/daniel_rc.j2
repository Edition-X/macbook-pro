# {{ ansible_managed }}

# https://formulae.brew.sh/formula/bash
# echo '/usr/local/bin/bash' | sudo tee -a /etc/shells
# chsh -s /usr/local/bin/bash

## check /private/etc/bashrc_Apple_Terminal
SHELL_SESSION_HISTORY=0 # share a single history between term sessions
export SHELL_SESSION_HISTORY
if [ ! -f "${HOME}"/.bash_sessions_disable ]; then
  touch "${HOME}"/.bash_sessions_disable
fi

## eternal bash history
HISTCONTROL=ignoreboth
# Eternal bash history.
# https://stackoverflow.com/questions/9457233/unlimited-bash-history
# ---------------------
# Undocumented feature which sets the size to "unlimited".
# http://stackoverflow.com/questions/9457233/unlimited-bash-history
HISTFILESIZE=
HISTSIZE=
HISTTIMEFORMAT='%F %T '
# Change the file location because certain bash sessions truncate .bash_history file upon close.
# http://superuser.com/questions/575479/bash-history-truncated-to-500-lines-on-each-login
HISTFILE=~/.bash_eternal_history
# Force prompt to write history after every command.
# http://superuser.com/questions/20900/bash-history-loss
# Note: commands that "hang" or for some reason don't go back to the prompt won't be recorded.
PROMPT_COMMAND="history -a; $PROMPT_COMMAND"
export HISTCONTROL HISTFILESIZE HISTSIZE HISTTIMEFORMAT HISTFILE PROMPT_COMMAND

## prompt
PS1='\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
export PS1

## ssh agent
function_add_ssh_keys () {
  if ! ssh-add -l | grep daniel.segura@ocado.com >/dev/null 2>&1; then
    if [ -f "${HOME}"/.ssh/id_rsa ]; then
      ssh-add "${HOME}"/.ssh/id_rsa
    fi
  fi
  if ! ssh-add -l | grep engprod.pharos@ocado.com >/dev/null 2>&1 ; then
    if [ -f "${HOME}"/.ssh/pharos_rsa ]; then
      ssh-add "${HOME}"/.ssh/pharos_rsa
    fi
  fi
  if ! ssh-add -l | grep {{ personal_email }} >/dev/null 2>&1 ; then
    if [ -f "${HOME}"/.ssh/{{ personal_ssh_key_name }} ]; then
      ssh-add "${HOME}"/.ssh/{{ personal_ssh_key_name }}
    fi
  fi
}

if [ -z "${SSH_AUTH_SOCK}" ]; then
  eval "$(ssh-agent -s)"
  function_add_ssh_keys
else
  function_add_ssh_keys
fi

## https://formulae.brew.sh/formula/coreutils
PATH="$(brew --prefix)/opt/coreutils/libexec/gnubin:${PATH}"

## https://formulae.brew.sh/formula/make
PATH="$(brew --prefix)/opt/make/libexec/gnubin:${PATH}"

## https://formulae.brew.sh/formula/bash-completion@2
[[ -r "$(brew --prefix)/etc/profile.d/bash_completion.sh" ]] && . "$(brew --prefix)/etc/profile.d/bash_completion.sh"

## https://formulae.brew.sh/formula/gnu-sed
PATH="$(brew --prefix)/opt/gnu-sed/libexec/gnubin:${PATH}"

## https://formulae.brew.sh/formula/git
PS1="${PS1%\\\$ }"'$(__git_ps1 " (%s)")\n$ ' # PS1="${PS1%\\\$ }"'$(__git_ps1 " (%s)")\$ '
GIT_PS1_SHOWDIRTYSTATE=1
GIT_PS1_SHOWUNTRACKEDFILES=1
GIT_PS1_SHOWUPSTREAM="auto"
GIT_PS1_SHOWCOLORHINTS=1
export GIT_PS1_SHOWDIRTYSTATE GIT_PS1_SHOWUNTRACKEDFILES GIT_PS1_SHOWUPSTREAM GIT_PS1_SHOWCOLORHINTS

## https://formulae.brew.sh/cask/visual-studio-code
if [ "$(type -t code)" == "file" ]; then
  EDITOR="code -w"
  export EDITOR
fi

## https://formulae.brew.sh/formula/awscli
if [ -x "$(which aws_completer)" ]; then
  complete -C "$(which aws_completer)" aws
fi

## makefile - https://stackoverflow.com/a/36044470
function _makefile_targets {
  local curr_arg;
  local targets;

  # Find makefile targets available in the current directory
  targets=''
  if [[ -e "$(pwd)/Makefile" ]]; then
    targets=$( \
      grep -oE '^[a-zA-Z0-9_-]+:' Makefile \
      | sed 's/://' \
      | tr '\n' ' ' \
    )
  fi

  # Filter targets based on user input to the bash completion
  curr_arg=${COMP_WORDS[COMP_CWORD]}
  mapfile -t COMPREPLY < <(compgen -W "${targets[@]}" -- "$curr_arg")
}
complete -F _makefile_targets make

## terraform
TERRAFORM_VERSION="0.14.4"
function terraform () {
  docker run --rm -it \
    -v "$(pwd)":/work \
    -v "${HOME}"/.aws:/root/.aws \
    -w /work hashicorp/terraform:${TERRAFORM_VERSION} \
    $@
}

## custom alias
alias ls="ls -lh --group-directories-first --color"

## python - virtual environment
# if [ -d "${HOME}"/.venv ] && [ -r "${HOME}"/.venv/bin/activate ] ; then
#   VIRTUAL_ENV_DISABLE_PROMPT=0 source "${HOME}"/.venv/bin/activate
# fi

## ansible-vault
if [ -f "${HOME}"/.vault_pass.txt ]; then
  ANSIBLE_VAULT_PASSWORD_FILE="${HOME}"/.vault_pass.txt
  export ANSIBLE_VAULT_PASSWORD_FILE
fi
